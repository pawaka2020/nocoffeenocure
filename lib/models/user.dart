import 'package:nocoffeenocure/models/voucher.dart';
import 'package:objectbox/objectbox.dart';
import 'cartitem.dart';
import 'order.dart';

/*
Class for user login, profile info.
Password NOT necessary since the token is auto-generated by Whatsapp business API
*/
/*
There must be something in the User class that determines eligibility of receiving vouchers.
birthday (happy birthday vouchers, received 3 days in advance)
current date (but this is taken from outside of the app)
*/
@Entity()
class UserOB {
  @Id()
  int id = 0; // for Objectbox's internal bookkeeping operations only, do not use!

  String? userId; // id for user, matching with id from reading auth token.
  String? name; // name of user.
  String? email; // email of user.
  DateTime? birthday; // set to null for 'guest' users.
  String? phoneNumber;
  String? address; // address of user, for sending to Lalamove/Grab/other delivery provider APIs.
  String? profileImage; // profile image of user, if required later on.
  int? coins; // amount of internal coins granted by the store for reward redemptions.
  bool? guest; // designate this user as 'guest' unique to the phone to allow usage of app even without logins.
  bool? isLoggedIn;
  bool? newUser;
  bool setDefaultAddress = false;
  //other fields (WIP)
  //vouchers
  //ongoing orders

  @Backlink()
  final orders = ToMany<OrderOB>();
  @Backlink()
  final vouchers = ToMany<VoucherOB>();
  //@Backlink()
  //late final cartItems = ToMany<CartItemOB>();
  @Backlink()
  final cartItems = ToMany<CartItemOB>();
  @Backlink()
  final reviews = ToMany<UserReview2OB>();

  Map<String, dynamic> toJson() {
    return {
      'user_id': userId,
      'name': name,
      'email': email,
      'birthday': birthday?.toIso8601String(), //Converting object to an encodable object failed: Instance of 'DateTime'
      'phone_number': phoneNumber,
      'address': address,
      'profile_image': profileImage,
      'coins': coins,
      'guest': guest,
      'is_logged_in': isLoggedIn,
      'new_user': newUser,
      'set_default_address': setDefaultAddress,
      // child objects
      'cart_items': cartItems.map((review) => review.toJson()).toList(),
    };
  }

}

@Entity()
class UserReview2OB {
  @Id()
  int id = 0;

  String? message;
  String? stars;
  String? status;

  final user = ToOne<UserOB>();
}